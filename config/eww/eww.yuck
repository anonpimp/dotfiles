;; Music
(defpoll music-art :interval "1s" "scripts/mediacontrol --cover")
(defpoll music-title :interval "1s" "scripts/mediacontrol --title")
(defpoll music-artist :interval "1s" "scripts/mediacontrol --artist")
(defpoll music-status :interval "1s" "scripts/mediacontrol --status")
(defpoll music-position :interval "1s" "scripts/mediacontrol --position")
(defpoll music-positions :interval "1s" "scripts/mediacontrol --positions")
(defpoll music-length :interval "1s" "scripts/mediacontrol --length")
(defpoll music-lengths :interval "1s" "scripts/mediacontrol --lengths")
(defpoll shuffle :interval "1s" `playerctl -p spotify shuffle`)
(defpoll loop :interval "1s" `playerctl -p spotify loop`)
(defvar music-rev false)

;; Volume
(defpoll volume-percent :interval "250ms" "pamixer --get-volume-human | tr -d '%'")
(defvar volume-rev false)

;; Date
(defpoll hour :interval "1s" "date '+%H'")
(defpoll minute :interval "1s" "date '+%M'")
(defpoll today :interval "1h" "date '+%A, %B %d'")
(defpoll calendar-day :interval "1h" "date '+%d'")
(defpoll calendar-month :interval "1h" "date '+%m'")
(defpoll calendar-year :interval "1h" "date '+%Y'")

;; Profile
(defvar profile-image "assets/profile.jpg")
(defpoll profile-name :interval "24h" "scripts/details --name")

;; Weather
(defpoll weather-icon :interval "1h" "scripts/weather --icon")
(defpoll weather-temp :interval "1h" "scripts/weather --temp")
(defpoll weather-desc :interval "1h" "scripts/weather --desc")
(deflisten weather-color "scripts/weather --hex")

;; System
(defpoll uptime :interval "1m" "uptime -p | sed -e 's/up //g'")
(defpoll cpu :interval "5s" "scripts/system --cpu")
(defpoll memory :interval "5s" "scripts/system --mem")
(defpoll memorymb :interval "5s" "scripts/system --memb")

;; Network
(defpoll network-status :interval "1s" `cat /sys/class/net/e*/operstate`)
(defpoll network-speed :interval "1s" "scripts/netspeed --down")
(defvar network-rev false)

;; Workspaces
(deflisten workspaces "scripts/workspaces")
(deflisten windowtitle `xtitle -s | stdbuf -oL -eL uniq | cat`)
(defpoll layout-status :interval "1s" "bsp-layout get")
(defpoll focused-desktop :interval "1s" "bspc query -D -d focused --names")

;; Updates
(defpoll updates :interval "2h" "scripts/updates --get")
(defvar pacman-rev false)

;; Notification
(defpoll dunst-history :interval "1s" "dunstctl history")
(defpoll dunst-count :interval "1s" "dunstctl count history")
(defpoll dunst-waiting :interval "1s" "dunstctl count waiting")
(defpoll notifications-dnd :interval "1s" "dunstctl is-paused")
(deflisten notifications-cards "scripts/logger.zsh subscribe")

(include "yuck/bar.yuck")
(include "yuck/player.yuck")
(include "yuck/powermenu.yuck")
(include "yuck/notifications.yuck")
(include "yuck/volume.yuck")

(defwidget closer [window]
	(eventbox 
		:onclick "eww close ${window} ${window}-closer"
	)
)
  
(defwindow player-closer
	:wm-ignore true
	:stacking "fg"
	:geometry (geometry :y "-5%" :width "100%" :height "100%")
  (closer :window "player")
)

(defwindow notifications-closer
	:wm-ignore true
	:stacking "fg"
	:geometry (geometry :y "-5%" :width "100%" :height "100%")
  (closer :window "notifications")
)